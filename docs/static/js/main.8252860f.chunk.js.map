{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA8BeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAiB1C,OACC,sBAAMC,SAXc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OAExCN,EAAc,MAKf,SACC,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBd,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,+BCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACP,mCACTC,EAFgB,sDACP,mCADO,cAEiDC,UACtEH,GAHqB,sBAKEI,MAAMF,GALR,cAKhBG,EALgB,gBAMCA,EAAUC,OANX,uBAMdC,EANc,EAMdA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXb,kBAefM,GAfe,4CAAH,sDCaLO,EAXK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACC,sBAAKc,UAAU,yCAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJMO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACfd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACTxB,EAAQC,GAAUwB,MAAK,SAACC,GACvBH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAGT,CAACpB,IAEGqB,EDb2BK,CAAa1B,GAAvCoB,EADgC,EAChCA,QAAeP,EADiB,EACvBN,KAEjB,OACC,qCACC,oBAAIS,UAAU,oCAAd,SAAmDhB,IAClDoB,EACA,mBAAGJ,UAAU,mCAAb,0BAEA,qBAAKA,UAAU,YAAf,SACEH,EAAOJ,KAAI,SAACC,GACZ,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEYpBgB,EAvBM,WAAO,IAAD,EACUzC,mBAAS,IADnB,mBACnB0C,EADmB,KACP3C,EADO,KAW1B,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACC2C,EAAWnB,KAAI,SAACT,GAChB,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,MAClB,Q,MCkBP6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.8252860f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setinputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetinputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories((cats) => [inputValue, ...cats]);\r\n\t\t\t//cats trae el estado anterior\r\n\t\t\tsetinputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n\tconst apiKey = 'yBwoptjMakmDzhdhIqAgxV90GZQtObgp';\r\n\tconst url = `http://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(\r\n\t\tcategory\r\n\t)}&limit=10`;\r\n\tconst respuesta = await fetch(url);\r\n\tconst { data } = await respuesta.json();\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\r\n\treturn gifs;\r\n};\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n\t//console.log(id, title, url);\r\n\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from '../components/GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\tconst { loading, data: images } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<p className=\"animate__animated animate__flash\">Cargando ...</p>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t\t{images.map((img) => {\r\n\t\t\t\t\t\treturn <GifGridItem key={img.id} {...img} />;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((imgs) => {\r\n\t\t\tsetState({\r\n\t\t\t\tdata: imgs,\r\n\t\t\t\tloading: false,\r\n\t\t\t});\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState([\r\n\t\t//'One Pounch',\r\n\t\t// 'Samurai X',\r\n\t\t// 'Dragon Ball',\r\n\t]);\r\n\r\n\t// const handleAdd = () => {\r\n\t// \tsetCategories([...categories, 'Ooootrra']);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<hr />\r\n\t\t\t{categories.map((category) => {\r\n\t\t\t\treturn <GifGrid key={category} category={category} />;\r\n\t\t\t})}{' '}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n//import { Container, Row, Col, Form, Button } from 'react-bootstrap';\n\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n// const texto = 'Hola Leandro';\n\n// const container = (\n// \t<Container fluid className=\"mt-3 p-4\">\n// \t\t<Row>\n// \t\t\t<Col>\n\n// \t\t\t\t<Form>\n// \t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n// \t\t\t\t\t\t<Form.Label>Email address</Form.Label>\n// \t\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Enter email\" />\n// \t\t\t\t\t\t<Form.Text className=\"text-muted\">\n// \t\t\t\t\t\t\tWe'll never share your email with anyone else.\n// \t\t\t\t\t\t</Form.Text>\n// \t\t\t\t\t</Form.Group>\n\n// \t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n// \t\t\t\t\t\t<Form.Label>Password</Form.Label>\n// \t\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" />\n// \t\t\t\t\t</Form.Group>\n// \t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n// \t\t\t\t\t\t<Form.Check type=\"checkbox\" label=\"Check me out\" />\n// \t\t\t\t\t</Form.Group>\n// \t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n// \t\t\t\t\t\tSubmit\n// \t\t\t\t\t</Button>\n// \t\t\t\t</Form>\n// \t\t\t</Col>\n// \t\t</Row>\n// \t</Container>\n// );\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}